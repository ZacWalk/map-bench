use std::sync::LazyLock;
use crate::perf::Measurement;

pub static PERF_DATA_DOT_NET_99_10k: LazyLock<Vec<Measurement>> = LazyLock::new(|| {  vec![
Measurement { name: "c#", thread_count: 1, latency: 55.2454425f64 },
Measurement { name: "c#", thread_count: 2, latency: 49.533345f64 },
Measurement { name: "c#", thread_count: 3, latency: 49.911753747793846f64 },
Measurement { name: "c#", thread_count: 4, latency: 51.6538725f64 },
Measurement { name: "c#", thread_count: 5, latency: 49.69327f64 },
Measurement { name: "c#", thread_count: 6, latency: 52.277737727773776f64 },
Measurement { name: "c#", thread_count: 7, latency: 62.803197850399734f64 },
Measurement { name: "c#", thread_count: 8, latency: 60.890865f64 },
Measurement { name: "c#", thread_count: 9, latency: 58.30893833089383f64 },
Measurement { name: "c#", thread_count: 10, latency: 67.72462f64 },
Measurement { name: "c#", thread_count: 11, latency: 66.76124918321861f64 },
Measurement { name: "c#", thread_count: 12, latency: 71.74284717428472f64 },
Measurement { name: "c#", thread_count: 13, latency: 76.69942191748555f64 },
Measurement { name: "c#", thread_count: 14, latency: 77.47072574121772f64 },
Measurement { name: "c#", thread_count: 15, latency: 79.03747225936806f64 },
Measurement { name: "c#", thread_count: 16, latency: 87.823515f64 },
] });
pub static PERF_DATA_DOT_NET_99_1M: LazyLock<Vec<Measurement>> = LazyLock::new(|| {  vec![
Measurement { name: "c#", thread_count: 1, latency: 80.2917325f64 },
Measurement { name: "c#", thread_count: 2, latency: 86.799735f64 },
Measurement { name: "c#", thread_count: 3, latency: 96.22613740565343f64 },
Measurement { name: "c#", thread_count: 4, latency: 101.3496975f64 },
Measurement { name: "c#", thread_count: 5, latency: 111.518785f64 },
Measurement { name: "c#", thread_count: 6, latency: 116.34806163480616f64 },
Measurement { name: "c#", thread_count: 7, latency: 111.02484637810579f64 },
Measurement { name: "c#", thread_count: 8, latency: 119.4041125f64 },
Measurement { name: "c#", thread_count: 9, latency: 144.29878442987845f64 },
Measurement { name: "c#", thread_count: 10, latency: 140.959615f64 },
Measurement { name: "c#", thread_count: 11, latency: 140.64820211343536f64 },
Measurement { name: "c#", thread_count: 12, latency: 156.11990561199056f64 },
Measurement { name: "c#", thread_count: 13, latency: 153.15208632880217f64 },
Measurement { name: "c#", thread_count: 14, latency: 161.7140010142003f64 },
Measurement { name: "c#", thread_count: 15, latency: 166.90033422508355f64 },
Measurement { name: "c#", thread_count: 16, latency: 176.03261f64 },
] });
pub static PERF_DATA_DOT_NET_100_10K: LazyLock<Vec<Measurement>> = LazyLock::new(|| {  vec![
Measurement { name: "c#", thread_count: 1, latency: 18.67353f64 },
Measurement { name: "c#", thread_count: 2, latency: 19.7654525f64 },
Measurement { name: "c#", thread_count: 3, latency: 20.69873551746839f64 },
Measurement { name: "c#", thread_count: 4, latency: 17.174895f64 },
Measurement { name: "c#", thread_count: 5, latency: 17.3543825f64 },
Measurement { name: "c#", thread_count: 6, latency: 18.206241820624182f64 },
Measurement { name: "c#", thread_count: 7, latency: 17.01061712632714f64 },
Measurement { name: "c#", thread_count: 8, latency: 19.6381425f64 },
Measurement { name: "c#", thread_count: 9, latency: 19.429641942964196f64 },
Measurement { name: "c#", thread_count: 10, latency: 18.81293f64 },
Measurement { name: "c#", thread_count: 11, latency: 19.897448482053484f64 },
Measurement { name: "c#", thread_count: 12, latency: 20.382319538231954f64 },
Measurement { name: "c#", thread_count: 13, latency: 21.64507804112695f64 },
Measurement { name: "c#", thread_count: 14, latency: 22.801589340476802f64 },
Measurement { name: "c#", thread_count: 15, latency: 22.35220308805077f64 },
Measurement { name: "c#", thread_count: 16, latency: 22.681025f64 },
] });
pub static PERF_DATA_DOT_NET_100_1M: LazyLock<Vec<Measurement>> = LazyLock::new(|| {  vec![
Measurement { name: "c#", thread_count: 1, latency: 72.6249975f64 },
Measurement { name: "c#", thread_count: 2, latency: 83.91552f64 },
Measurement { name: "c#", thread_count: 3, latency: 82.25130455628262f64 },
Measurement { name: "c#", thread_count: 4, latency: 88.64428f64 },
Measurement { name: "c#", thread_count: 5, latency: 91.11649f64 },
Measurement { name: "c#", thread_count: 6, latency: 98.16929731692973f64 },
Measurement { name: "c#", thread_count: 7, latency: 101.0621376327672f64 },
Measurement { name: "c#", thread_count: 8, latency: 106.03196f64 },
Measurement { name: "c#", thread_count: 9, latency: 115.8075890807589f64 },
Measurement { name: "c#", thread_count: 10, latency: 120.1205825f64 },
Measurement { name: "c#", thread_count: 11, latency: 133.2926308262104f64 },
Measurement { name: "c#", thread_count: 12, latency: 126.31080013108001f64 },
Measurement { name: "c#", thread_count: 13, latency: 135.6583758914594f64 },
Measurement { name: "c#", thread_count: 14, latency: 138.2380389714117f64 },
Measurement { name: "c#", thread_count: 15, latency: 139.52378738094686f64 },
Measurement { name: "c#", thread_count: 16, latency: 145.984395f64 },
] });
