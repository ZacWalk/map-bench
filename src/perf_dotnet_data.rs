use std::sync::LazyLock;
use crate::perf::Measurement;

pub static PERF_DATA_DOT_NET_99_10k: LazyLock<Vec<Measurement>> = LazyLock::new(|| {  vec![
Measurement { name: "c#", thread_count: 1, latency: 50 },
Measurement { name: "c#", thread_count: 2, latency: 47 },
Measurement { name: "c#", thread_count: 3, latency: 60 },
Measurement { name: "c#", thread_count: 4, latency: 57 },
Measurement { name: "c#", thread_count: 5, latency: 68 },
Measurement { name: "c#", thread_count: 6, latency: 54 },
Measurement { name: "c#", thread_count: 7, latency: 60 },
Measurement { name: "c#", thread_count: 8, latency: 61 },
Measurement { name: "c#", thread_count: 9, latency: 66 },
Measurement { name: "c#", thread_count: 10, latency: 71 },
Measurement { name: "c#", thread_count: 11, latency: 83 },
Measurement { name: "c#", thread_count: 12, latency: 82 },
Measurement { name: "c#", thread_count: 13, latency: 99 },
Measurement { name: "c#", thread_count: 14, latency: 85 },
Measurement { name: "c#", thread_count: 15, latency: 118 },
Measurement { name: "c#", thread_count: 16, latency: 109 },
] });
pub static PERF_DATA_DOT_NET_99_1M: LazyLock<Vec<Measurement>> = LazyLock::new(|| {  vec![
Measurement { name: "c#", thread_count: 1, latency: 86 },
Measurement { name: "c#", thread_count: 2, latency: 93 },
Measurement { name: "c#", thread_count: 3, latency: 100 },
Measurement { name: "c#", thread_count: 4, latency: 118 },
Measurement { name: "c#", thread_count: 5, latency: 117 },
Measurement { name: "c#", thread_count: 6, latency: 118 },
Measurement { name: "c#", thread_count: 7, latency: 119 },
Measurement { name: "c#", thread_count: 8, latency: 137 },
Measurement { name: "c#", thread_count: 9, latency: 143 },
Measurement { name: "c#", thread_count: 10, latency: 155 },
Measurement { name: "c#", thread_count: 11, latency: 153 },
Measurement { name: "c#", thread_count: 12, latency: 162 },
Measurement { name: "c#", thread_count: 13, latency: 165 },
Measurement { name: "c#", thread_count: 14, latency: 168 },
Measurement { name: "c#", thread_count: 15, latency: 178 },
Measurement { name: "c#", thread_count: 16, latency: 181 },
] });
pub static PERF_DATA_DOT_NET_100_10K: LazyLock<Vec<Measurement>> = LazyLock::new(|| {  vec![
Measurement { name: "c#", thread_count: 1, latency: 18 },
Measurement { name: "c#", thread_count: 2, latency: 19 },
Measurement { name: "c#", thread_count: 3, latency: 19 },
Measurement { name: "c#", thread_count: 4, latency: 15 },
Measurement { name: "c#", thread_count: 5, latency: 15 },
Measurement { name: "c#", thread_count: 6, latency: 21 },
Measurement { name: "c#", thread_count: 7, latency: 15 },
Measurement { name: "c#", thread_count: 8, latency: 17 },
Measurement { name: "c#", thread_count: 9, latency: 17 },
Measurement { name: "c#", thread_count: 10, latency: 18 },
Measurement { name: "c#", thread_count: 11, latency: 18 },
Measurement { name: "c#", thread_count: 12, latency: 18 },
Measurement { name: "c#", thread_count: 13, latency: 19 },
Measurement { name: "c#", thread_count: 14, latency: 19 },
Measurement { name: "c#", thread_count: 15, latency: 20 },
Measurement { name: "c#", thread_count: 16, latency: 21 },
] });
pub static PERF_DATA_DOT_NET_100_1M: LazyLock<Vec<Measurement>> = LazyLock::new(|| {  vec![
Measurement { name: "c#", thread_count: 1, latency: 76 },
Measurement { name: "c#", thread_count: 2, latency: 86 },
Measurement { name: "c#", thread_count: 3, latency: 86 },
Measurement { name: "c#", thread_count: 4, latency: 89 },
Measurement { name: "c#", thread_count: 5, latency: 97 },
Measurement { name: "c#", thread_count: 6, latency: 101 },
Measurement { name: "c#", thread_count: 7, latency: 108 },
Measurement { name: "c#", thread_count: 8, latency: 113 },
Measurement { name: "c#", thread_count: 9, latency: 117 },
Measurement { name: "c#", thread_count: 10, latency: 126 },
Measurement { name: "c#", thread_count: 11, latency: 137 },
Measurement { name: "c#", thread_count: 12, latency: 130 },
Measurement { name: "c#", thread_count: 13, latency: 137 },
Measurement { name: "c#", thread_count: 14, latency: 144 },
Measurement { name: "c#", thread_count: 15, latency: 151 },
Measurement { name: "c#", thread_count: 16, latency: 150 },
] });
